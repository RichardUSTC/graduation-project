{

                                        union v{
                                            double f;
                                            uint64_t u;
                                        };
                                        v va, vn, vm, vd;
                                        va.f = Va_df;
                                        vn.f = Vn_df;
                                        vm.f = Vm_df;
                                        vd.f = 0.0;
                                        if(isSnan(&va.u, 64))
                                        {
                                            vd.u = va.u;
                                            vd.u |= 0x0008000000000000;//todo: raise FPExc_InvalidOp
                                            //if(DefaultNan request)
                                                //vd.u = ARM64_QNAN;
                                            Vd_df = vd.f;
                                        }
                                        else if(isSnan(&vn.u, 64))
                                        {
                                            vn.u = vn.u | 0x0008000000000000;
                                            //todo:raise FpExc_InvalidOp
                                            vd.f = vn.f;
                                            //todo: if(DefaultNan requested)
                                            //  vd.f = ARM64_QNAN;
                                            Vd_df = vd.f;
                                        }
                                        else if(isSnan(&vm.u, 64))
                                        {
                                            vm.u |= 0x0008000000000000;
                                            //todo:raise FpExc_InvalidOp
                                            vd.f = vm.f;
                                            //todo: if(DefaultNan requested)
                                            //  vd.f = ARM64_QNAN;
                                            Vd_df = vd.f;
                                        }
                                        else if(isQnan(&va.u, 64))
                                        {
                                            vd.f = va.f;
                                            //todo: if(DefaultNan requested)
                                            //  vd.f = ARM64_QNAN;
                                            Vd_df = vd.f;
                                        }
                                        else if(isQnan(&vn.u, 64))
                                        {
                                            vd.f = vn.f;
                                            //todo: if(DefaultNan requested)
                                            //  vd.f = ARM64_QNAN;
                                            Vd_df = vd.f;
                                        }
                                        else if(isQnan(&vm.u, 64))
                                        {
                                            vd.f = vm.f;
                                            //todo: if(DefaultNan requested)
                                            //  vd.f = ARM64_QNAN;
                                            Vd_df = vd.f;
                                        }
                                        else if(isQnan(&va.u, 64) && ((isInfinity(&vn.u, 64) && vm.u<62:0> == 0) || (isInfinity(&vm.u, 64) && vn.u<62:0> == 0)))
                                        {
                                            vd.u = ARM64_QNAN;//todo:raise FPExc_InvalidOp exception
                                            Vd_df = vd.f;
                                        }
                                        else
                                        {
                                            uint32_t signP = (vn.u<63:63> == vm.u<63:63>)? 1: 0;
                                            uint32_t infP = (isInfinity(&vn.u, 64)) | (isInfinity(&vm.u, 64));
                                            uint32_t zeroP = (vn.u<62:0> == 0) | (vm.u<62:0> == 0);
                                            
                                            if((isInfinity(&vn.u, 64) && vm.u<62:0> == 0) || (isInfinity(&vm.u, 64) && vn.u<62:0> == 0) || (isInfinity(&va.u, 64) && infP && (signP == va.u<63:63>)))
                                            {
                                                vd.u = ARM64_QNAN;//todo:raise FPExc_InvalidOp exception
                                                Vd_df = vd.f;
                                            }
                                            else if((isInfinity(&va.u, 64) && va.u<63:63> == 1) || (infP && signP == 0))
                                            {
                                                vd.u = 0x7f80000000000000;
                                                Vd_df = vd.f;
                                            }
                                            else if((isInfinity(&va.u, 64) && va.u<63:63> == 0) || (infP && signP == 1))
                                            {
                                                vd.u = 0xFF80000000000000;
                                                Vd_df = vd.f;
                                            }
                                            else if(va.u<62:0> == 0 && zeroP && va.u<63:63> != signP)
                                            {
                                                Vd_df = vd.f = va.f;
                                            }
                                            else 
                                            {
                                                switch(RMODE(FPCR))
                                                {
                                                    case 0x0:
                                                        fesetround(FE_TONEAREST);
                                                        break;
                                                    case 0x1:
                                                        fesetround(FE_UPWARD);
                                                        break;
                                                    case 0x2:
                                                        fesetround(FE_DOWNWARD);
                                                        break;
                                                    case 0x3: 
                                                        fesetround(FE_TOWARDZERO);
                                                        break;
                                                }
                                                vd.f = (-va.f) + (-vn.f) * vm.f;
                                                Vd_df = vd.f;
                                                fesetround(FE_TONEAREST);
                                                if(vd.f == 0)
                                                {
                                                    vd.u |= ((((RMODE(FPCR)) == 0x2)? 0x1UL: 0x0UL) << 63);
                                                    Vd_df = vd.f;
                                                }
                                            }
                                        }
                                    
}