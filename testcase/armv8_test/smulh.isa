{

                                        uint64_t rn = Rn_ud;
                                        uint64_t rm = Rm_ud;
                                        uint64_t res_hi=0,res_lo=0,res_lo_temp=0,temp=0,c;
                                        uint64_t res_hi1=0,res_lo1=0,res_lo_temp1=0;
                                        int i = 0;
                                        for(i=0;i<63;i++){
                                            temp = rn * rm<i:i>;
                                            if(temp<63:63>)
                                                res_hi += (mask(64 - i) << i); 
                                            res_lo_temp = res_lo + (temp << i);
                                            c = findCarry(64,res_lo_temp,res_lo,(temp << i)) & 1;
                                            res_lo = res_lo_temp;
                                            if(i != 0){
                                                res_hi = res_hi + (temp >> (64 - i)) + c;
                                            }
                                        }
                                        if(rm<63:63>){
                                            res_hi1 = 0xffffffffffffffff - sext<63>(rn >> 1);
                                            res_lo1 = 0xffffffffffffffff - (rn << 63);
                                            res_lo_temp1 =  res_lo1 + 1;
                                            c = findCarry(64,res_lo_temp1,res_lo1,1) & 1;
                                            res_lo_temp = res_lo_temp1 + res_lo;
                                            c += (findCarry(64,res_lo_temp,res_lo_temp1,res_lo) & 1);
                                            res_hi = res_hi1 + res_hi + c;
                                        }
                                        Rd_ud = res_hi;
                                    
}